/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@use 'sass:map';
@use '@angular/material' as mat;

@mixin generate-theme($material-theme, $config) {
    $is-material-dark: if(mat.get-theme-type($material-theme) == dark, true, false);
    $material-theme-secondary-palette-default: mat.get-theme-color(
        $material-theme,
        secondary,
        map.get(map.get($config, secondary), default)
    );
    $material-theme-secondary-palette-darker: mat.get-theme-color(
        $material-theme,
        secondary,
        map.get(map.get($config, secondary), darker)
    );
    $material-theme-secondary-palette-lighter: mat.get-theme-color(
        $material-theme,
        secondary,
        map.get(map.get($config, secondary), lighter)
    );
    $material-theme-neutral-palette-darker: mat.get-theme-color(
        $material-theme,
        neutral,
        map.get(map.get($config, neutral), darker)
    );
    $material-theme-neutral-palette-lighter: mat.get-theme-color(
        $material-theme,
        neutral,
        map.get(map.get($config, neutral), lighter)
    );

    $hover: var(--mat-menu-item-hover-state-layer-color);

    .new-canvas-item {
        .icon {
            color: if(
                $is-material-dark,
                $material-theme-secondary-palette-darker,
                $material-theme-secondary-palette-darker
            );

            &.hovering {
                @extend .mat-elevation-z2;

                // This solution re-uses the highlight value used throughout the UI, but because we need to hide the non-hover
                // version of the icons, we create a double layered gradient with the matching background color of the
                // navigation bar, then put the highlight on top of it.
                background: linear-gradient($hover, $hover),
                    linear-gradient($material-theme-neutral-palette-lighter, $material-theme-neutral-palette-lighter) !important;

                .component-button-grip {
                    background: repeating-linear-gradient(
                        90deg,
                        if(
                            $is-material-dark,
                            $material-theme-neutral-palette-darker,
                            $material-theme-neutral-palette-lighter
                        ),
                        if(
                                $is-material-dark,
                                $material-theme-secondary-palette-default,
                                $material-theme-secondary-palette-darker
                            )
                            4px,
                        transparent 4px,
                        transparent 6px
                    );
                }
            }

            &.cdk-drag-dragging {
                color: $material-theme-secondary-palette-lighter;
                mix-blend-mode: difference; // Make sure the dragged icon is always visible
            }
        }

        .icon:disabled {
            @extend .neutral-color;
            cursor: not-allowed;
        }
    }
}
