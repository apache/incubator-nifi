/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@use 'sass:map';
@use '@angular/material' as mat;

@mixin generate-theme($material-theme, $config) {
    $is-material-dark: if(mat.get-theme-type($material-theme) == dark, true, false);

    $material-theme-tertiary-palette-darker: mat.get-theme-color(
        $material-theme,
        tertiary,
        map.get(map.get($config, tertiary), darker)
    );
    $material-theme-tertiary-palette-lighter: mat.get-theme-color(
        $material-theme,
        tertiary,
        map.get(map.get($config, tertiary), lighter)
    );

    $selected-item-color: if(
        $is-material-dark,
        $material-theme-tertiary-palette-darker,
        $material-theme-tertiary-palette-lighter
    );

    $alternate-surface: map.get($config, alternate-surface);

    .documentation {
        h2 {
            margin-bottom: 12px !important;
        }

        .extension-links,
        .external-links {
            a:hover {
                background-color: var(--mat-menu-item-hover-state-layer-color) !important;
            }

            a.selected {
                background-color: $selected-item-color !important;
            }
        }

        .mat-expansion-panel-header-title,
        .mat-expansion-panel-header-description {
            @apply truncate;
            display: block !important;
        }

        markdown {
            h1 {
                margin: 0 0 16px;
                line-height: 28px;
                font-size: 20px;
                font-weight: 700;
            }

            h2 {
                margin: 0 0 16px;
                line-height: 28px;
                font-size: 18px;
                font-weight: 700;
            }

            h3 {
                margin: 0 0 16px;
                line-height: 28px;
                font-size: 18px;
                font-weight: 400;
            }

            h4 {
                margin: unset;
                line-height: 20px;
                font-size: 14px;
                font-weight: 400;
            }

            h5 {
                margin: unset;
                line-height: 20px;
                font-size: 14px;
                font-weight: 400;
            }

            h6 {
                margin: unset;
                line-height: 12px;
                font-size: 12px;
                font-weight: 400;
            }

            ul {
                list-style: disc outside;
                margin: 1em;
            }

            ol {
                list-style: auto outside;
                margin: 1em;
            }

            table {
                display: table;
                background-color: $alternate-surface;
                border-width: 1px;
                margin-bottom: 1em;
                width: 100%;
                table-layout: fixed;
                text-align: left;
                border-collapse: separate;
                border-spacing: 0;

                th {
                    @extend .neutral-contrast;
                    user-select: none;
                }

                td,
                th {
                    border-bottom-width: 1px;
                    border-bottom-style: solid;
                    white-space: nowrap;
                    overflow: hidden;
                    text-overflow: ellipsis;
                    cursor: default;
                    text-wrap: wrap;
                    padding: 8px;
                    word-break: break-word;
                }

                th {
                    text-transform: uppercase;
                }

                ul {
                    list-style-type: disc;
                    list-style-position: inside;

                    text-wrap: wrap;
                    word-break: break-all;
                }

                tbody {
                    tr:hover {
                        background-color: var(--mat-menu-item-hover-state-layer-color) !important;
                    }
                }
            }
        }
    }
}
