/*!
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

// Custom Colors following Material Design
// For more information: https://m2.material.io/design/color/the-color-system.html
@use '@angular/material' as mat;
@use 'sass:map';

$surface-light-palette: (
    50: #ffffff,
    100: #fafafa,
    200: #f4f4f4,
    300: #e3e3e3,
    400: #d8d8d8,
    500: #acacac,
    600: #666666,
    700: #444444,
    800: #303030,
    900: #121212,
    contrast: (
        50: rgba(#000000, 0.87),
        100: rgba(#000000, 0.87),
        200: rgba(#000000, 0.87),
        300: rgba(#000000, 0.87),
        400: rgba(#000000, 0.87),
        500: rgba(#000000, .87),
        600: rgba(#000000, 0.87),
        700: #ffffff,
        800: #ffffff,
        900: #ffffff,
        A100: rgba(#000000, 0.87),
        A200: rgba(#000000, 0.87),
        A400: rgba(#000000, 0.87),
        A700: #ffffff,
    )
);

$success-light-palette: (
    50: #e5ebed, // Used for the grid lines on the canvas in light mode
    100: #c3e8d0,
    200: #9dd9b2,
    300: #73ca94,
    400: #52bf7e,
    500: #00ff00,  // g.component.connectable-destination rect.border, path.connector.connectable
    600: #2cb367,
    700: #1A9964,
    800: #016131,
    900: #0d1411, // Used for the grid lines on the canvas in dark mode
    A100: #bfbfff,
    A200: #8080ff,
    A400: #4040ff,
    A700: #0000ff, // .context-menu-item:focus, g.connection rect.endpoint, g.process-group.drop rect.border
    contrast: (
        50: rgba(#000000, 0.87),
        100: rgba(#000000, 0.87),
        200: rgba(#000000, 0.87),
        300: rgba(#000000, 0.87),
        400: rgba(#000000, 0.87),
        500: rgba(#000000, 0.87),
        600: #ffffff,
        700: #ffffff,
        800: #ffffff,
        900: #ffffff,
        A100: rgba(#000000, 0.87),
        A200: rgba(#000000, 0.87),
        A400: rgba(#000000, 0.87),
        A700: rgba(#000000, 0.87),
    )
);

$nifi-warn-light-palette: (
    50: #ffebee,
    100: #ffccd2,
    200: #f49999,
    300: #eb7071,
    400: #f64e4c,
    500: #fa3b30,
    600: #ec3030,
    700: #ff1507,
    800: #ff0000, // path.connector, g.connection rect.startpoint
    900: #ba554a, // g.component rect.border.unauthorized, #connection-full-drop-shadow feFlood, text.restricted, g.connection rect.border.unauthorized, g.connection path.connection-path.full, g.connection path.connection-path.unauthorized, .controller-bulletins.has-bulletins, path.link.selected, g.event circle.selected
    A100: #ffef85,
    A200: #f8bf47, // g.event circle.context,
    A400: #bda500, // .bulletin-warn, .has-errors, .invalid, g.event circle.context, g.connection rect.backpressure-percent.warning,
    A700: #ffcc00, // g.connection.selected rect.border, g.connection path.connection-selection-path, g.connection rect.midpoint, g.label rect.labelpoint
    contrast: (
        50: rgba(#000000, 0.87),
        100: rgba(#000000, 0.87),
        200: rgba(#000000, 0.87),
        300: rgba(#000000, 0.87),
        400: rgba(#000000, 0.87),
        500: #ffffff,
        600: #ffffff,
        700: #ffffff,
        800: #ffffff,
        900: #ffffff,
        A100: rgba(#000000, 0.87),
        A200: #ffffff,
        A400: #ffffff,
        A700: #ffffff,
    )
);

$surface-dark-palette: $surface-light-palette;
$success-dark-palette: $success-light-palette;
$nifi-warn-dark-palette: $nifi-warn-light-palette;

// surface palette default color hue must have enough contrast on top of the mat-app-background. For light mode this is a minimum of 600 up to 900.
// For the lighter and darker hues these are used as the surface colors for canvas components, the birdseye, navigate/operate palettes etc. When the theme is in light mode the lighter hue is used as the surface color and the darker hue sets the contrast color hue.
$surface-light-palette: mat.define-palette($surface-light-palette, 600, 100, 900);
$success-light-palette: mat.define-palette($success-light-palette, 400, 200, 800);
$nifi-warn-light-palette: mat.define-palette($nifi-warn-light-palette, 400, 200, 900);

$nifi-theme-light: mat.define-light-theme(
        (
            color: (
                primary: $surface-light-palette,
                accent: $success-light-palette,
                warn: $nifi-warn-light-palette
            ),
            //typography: mat.define-typography-config(), // TODO: typography
            density: -3
        )
);

// surface palette default color hue must have enough contrast on top of the mat-app-background. For light mode this is a minimum of 300 up to 500.
// For the lighter and darker hues these are used as the surface colors for canvas components, the birdseye, navigate/operate palettes etc. When the theme is in dark mode the darker hue is used as the surface color and the lighter hue sets the contrast color hue.
$surface-dark-palette: mat.define-palette($surface-dark-palette, 500, 200, 800);
$success-dark-palette: mat.define-palette($success-dark-palette, 400, 200, 800);
$nifi-warn-dark-palette: mat.define-palette($nifi-warn-dark-palette, 600, 200, 300);

$nifi-theme-dark: mat.define-dark-theme(
        (
            color: (
                primary: $surface-dark-palette,
                accent: $success-dark-palette,
                warn: $nifi-warn-dark-palette,
            ),
            //typography: mat.define-typography-config(), // TODO: typography
            density: -3
        )
);
