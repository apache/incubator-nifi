/*!
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

@use '@angular/material' as mat;

$material-primary-light-palette: (
    50: #ede7f6,
    100: #d1c4e9,
    200: #b39ddb,
    300: #9575cd,
    400: #7e57c2,
    500: #673ab7,
    600: #5e35b1,
    700: #512da8,
    800: #4527a0,
    900: #311b92,
    A100: #666666,
    A200: #444444,
    A400: #303030,
    A700: #121212,
    contrast: (
        50: rgba(#000000, .87),
        100: rgba(#000000, .87),
        200: rgba(#000000, .87),
        300: rgba(#000000, .87),
        400: rgba(#000000, .87),
        500: rgba(#000000, .87),
        600: #ffffff,
        700: #ffffff,
        800: #ffffff,
        900: #ffffff,
        A100: rgba(#000000, .87),
        A200: rgba(#000000, .87),
        A400: rgba(#000000, .87),
        A700: rgba(#000000, .87),
    )
);
$material-accent-light-palette: mat.$teal-palette;
$warn-light-palette: mat.$red-palette;

$material-primary-dark-palette: $material-primary-light-palette;
$material-accent-dark-palette: $material-accent-light-palette;
$warn-dark-palette: $warn-light-palette;

// Define the palettes for your theme
$material-primary-light: mat.define-palette($material-primary-light-palette, 800, 500, 200);
$material-accent-light: mat.define-palette($material-accent-light-palette, 600, 50, A700);
$warn-light: mat.define-palette($warn-light-palette, 400, 200, 900);

// Create the theme objects. We can extract the values we need from the theme passed into the mixins.
$material-theme-light: mat.define-light-theme(
        (
            color: (
                primary: $material-primary-light,
                accent: $material-accent-light,
                warn: $warn-light
            ),
            density: -3
        )
);

// Create the color palettes used in our dark theme.
$material-primary-dark: mat.define-palette($material-primary-dark-palette, 200, 100, A700);
$material-accent-dark: mat.define-palette($material-accent-dark-palette, 200, A100, 900);
$warn-dark: mat.define-palette($warn-dark-palette, 500, 200, 700);

$material-theme-dark: mat.define-dark-theme(
        (
            color: (
                primary: $material-primary-dark,
                accent: $material-accent-dark,
                warn: $warn-dark
            ),
            density: -3
        )
);
