/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@use 'sass:map';
@use '@angular/material' as mat;
@use '../../../../../../../assets/utils.scss' as utils;

@mixin generate-theme($material-theme, $nifi-theme) {
    // Get the color config from the theme.
    $material-theme-color-config: mat.get-color-config($material-theme);
    $nifi-theme-color-config: mat.get-color-config($nifi-theme);

    // Get the color palette from the color-config.
    $material-theme-primary-palette: map.get($material-theme-color-config, 'primary');
    $material-theme-warn-palette: map.get($material-theme-color-config, 'warn');

    // Get hues from palette
    $material-theme-primary-palette-darker: mat.get-color-from-palette($material-theme-primary-palette, darker);
    $material-theme-primary-palette-darker-contrast: mat.get-color-from-palette(
        $material-theme-primary-palette,
        darker-contrast
    );
    $material-theme-warn-palette-default: mat.get-color-from-palette($material-theme-warn-palette, default);
    $material-theme-warn-palette-default-contrast: mat.get-color-from-palette(
        $material-theme-warn-palette,
        default-constrast
    );

    $surface: utils.get-surface($nifi-theme-color-config);
    $on-surface-lighter: utils.get-on-surface($nifi-theme-color-config, lighter);

    .flow-status {
        border-bottom: 1px solid $on-surface-lighter;
        background: $surface;

        .fa,
        .icon {
            color: utils.get-color-on-surface($material-theme-color-config, $surface);
        }

        .warning {
            color: $material-theme-warn-palette-default;
        }

        .status-value {
            color: utils.get-color-on-surface($material-theme-color-config, $surface, 'accent');
        }

        .controller-bulletins {
            border-left: 1px solid $on-surface-lighter;
            background-color: $material-theme-primary-palette-darker;
        }

        .controller-bulletins.has-bulletins {
            background-color: $material-theme-warn-palette-default;
        }
        .controller-bulletins.has-bulletins .fa {
            background-color: $material-theme-warn-palette-default-contrast;
        }

        .controller-bulletins .fa {
            color: $material-theme-primary-palette-darker-contrast;
        }
    }
}
