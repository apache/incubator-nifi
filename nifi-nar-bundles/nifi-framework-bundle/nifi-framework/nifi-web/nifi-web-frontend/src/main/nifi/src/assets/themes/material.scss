/*!
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

// Custom Colors following Material Design
// For more information: https://m2.material.io/design/color/the-color-system.html
@use 'sass:map';
@use '@angular/material' as mat;
@use '../utils.scss' as utils;

// Define some variables that are re-used throughout the theme.
$on-surface-dark: rgba(#000000, .87);
$on-surface-light: #ffffff;

$material-primary-light-palette: (
    50: rgba(#F9FAFB, 0.97),
    100: #e5ebed,
    200: #cbd8dd,
    300: #abbdc5,
    400: #8aa2ad,
    500: #728e9b,
    600: #597b8a,
    700: #4e6c79,
    800: #3f5863,
    900: #31454e,
    contrast: (
        50: $on-surface-dark,
        100: $on-surface-dark,
        200: $on-surface-dark,
        300: $on-surface-dark,
        400: $on-surface-dark,
        500: $on-surface-dark,
        600: $on-surface-light,
        700: $on-surface-light,
        800: $on-surface-light,
        900: $on-surface-light,
        A100: $on-surface-dark,
        A200: $on-surface-dark,
        A400: $on-surface-dark,
        A700: $on-surface-light,
    )
);
$material-accent-light-palette: mat.$brown-palette;
$warn-light-palette: mat.$red-palette;

// Dark and light palettes are identical for NiFi, their "default", "lighter", and "darker" values are different and set below.
$material-primary-dark-palette: $material-primary-light-palette;
$material-accent-dark-palette: $material-accent-light-palette;
$warn-dark-palette: $warn-light-palette;

// Define the palettes for your theme
$material-primary-light: mat.define-palette($material-primary-light-palette, 600, 300, 700);
$material-accent-light: mat.define-palette($material-accent-light-palette, 500, 50, A700);
$warn-light: mat.define-palette($warn-light-palette, 400, 200, 900);

// Create the theme objects. We can extract the values we need from the theme passed into the mixins.
$material-theme-light: mat.define-light-theme(
        (
            color: (
                primary: $material-primary-light,
                accent: $material-accent-light,
                warn: $warn-light
            ),
            //typography: mat.define-typography-config(), // TODO: typography
            density: -3
        )
);

// Create the color palettes used in our dark theme.
$material-primary-dark: mat.define-palette($material-primary-dark-palette, 400, 200, 800);
$material-accent-dark: mat.define-palette($material-accent-dark-palette, 200, A100, 500);
$warn-dark: mat.define-palette($warn-dark-palette, 500, 200, 700);

$material-theme-dark: mat.define-dark-theme(
        (
            color: (
                primary: $material-primary-dark,
                accent: $material-accent-dark,
                warn: $warn-dark
            ),
            density: 0,
            typography: mat.define-typography-config(),
        )
);

